SUBTTL	EXPONENTIATION FUNCTION.
	;FIRST SAVE THE ORIGINAL ARGUMENT AND MULTIPLY THE FAC BY
	;LOG2(E). THE RESULT IS USED TO DETERMINE IF OVERFLOW
	;WILL OCCUR SINCE EXP(X)=2^(X*LOG2(E)) WHERE
	;LOG2(E)=LOG(E) BASE 2. THEN SAVE THE INTEGER PART OF
	;THIS TO SCALE THE ANSWER AT THE END. SINCE
	;2^Y=2^INT(Y)*2^(Y-INT(Y)) AND 2^INT(Y) IS EASY TO COMPUTE.
	;NOW COMPUTE 2^(X*LOG2(E)-INT(X*LOG2(E)) BY
	;P(LN(2)*(INT(X*LOG2(E))+1)-X) WHERE P IS AN APPROXIMATION
	;POLYNOMIAL. THE RESULT IS THEN SCALED BY THE POWER OF 2
	;PREVIOUSLY SAVED.

LOGEB2: 201			;LOG(E) BASE 2.
	070
	252
	073
IFN	ADDPRC,<051>

ife	addprc,<
expcon: 6	; degree -1.
	164	; .00021702255
	143
	220
	214
	167	; .0012439688
	043
	014
	253
	172	; .0096788410
	036
	224
	000
	174	; .055483342
	143
	102
	200
	176	; .24022984
	165
	376
	320
	200	; .69314698
	061
	162
	025
	201	; 1.0
	000
	000
	000>


IFN	ADDPRC,<
EXPCON: 7	;DEGREE-1
	161	; .000021498763697
	064
	130
	076
	126
	164	; .00014352314036
	026
	176
	263
	033
	167	; .0013422634824
	057
	356
	343
	205
	172	; .0096140170119
	035
	204
	034
	052
	174	; .055505126860
	143
	131
	130
	012
	176	; .24022638462
	165
	375
	347
	306
	200	; .69314718608
	061
	162
	030
	020
	201	; 1.0
	000
	000
	000
	000>

EXP:
	LDWDI	LOGEB2		;MULTIPLY BY LOG(E) BASE 2.
	JSR	FMULT
	LDA	FACOV
	ADCI	120
	BCC	STOLD
	JSR	INCRND
STOLD:	STA	OLDOV
	JSR	MOVEF		;TO SAVE IN ARG WITHOUT ROUND.
	LDA	FACEXP
	CMPI	210		;IF ABS(FAC) .GE. 128, TOO BIG.
	BCC	EXP1
GOMLDV: JSR	MLDVEX		;OVERFLOW OR OVERFLOW.
EXP1:	JSR	INT
	LDA	INTEGR	;GET LOW PART.
	CLC
	ADCI	201
	BEQ	GOMLDV		;OVERFLOW OR OVERFLOW !!
	SEC
	SBCI	1		;SUBTRACT 1.
	PHA			;SAVE A WHILE.
	LDXI	4+ADDPRC	;PREP TO SWAP FAC AND ARG.
SWAPLP: LDA	ARGEXP,X
	LDY	FACEXP,X
	STA	FACEXP,X
	STY	ARGEXP,X
	DEX
	BPL	SWAPLP
	LDA	OLDOV
	STA	FACOV
	JSR	FSUBT
	JSR	NEGOP		;NEGATE FAC.
	LDWDI	EXPCON
	JSR	POLY
	CLR	ARISGN		;MULTIPLY BY POSITIVE 1.0.
	PLA			;GET SCALE FACTOR.
	JSR	MLDEXP		;MODIFY FACEXP AND CHECK FOR OVERFLOW.
	RTS			;HAS TO DO JSR DUE TO PULAS IN MULDIV.


PAGE
