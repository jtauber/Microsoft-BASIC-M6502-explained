SUBTTL	SIMPLE-USER-DEFINED-FUNCTION CODE.
;
; NOTE ONLY SINGLE ARGUMENTS ARE ALLOWED TO FUNCTIONS
; AND FUNCTIONS MUST BE OF THE SINGLE LINE FORM:
;	DEF FNA(X)=X^2+X-2
; NO STRINGS CAN BE INVOLVED WITH THESE FUNCTIONS.
;
; IDEA: CREATE A SIMPLE VARIABLE ENTRY
; WHOSE FIRST CHARACTER HAS THE 200 BIT SET.
; THE VALUE WILL BE:
;
;	A TEXT PNTR TO THE FORMULA.
;	A PNTR TO THE ARGUMENT VARIABLE.
;
; FUNCTION NAMES CAN BE LIKE "FNA4".
;
;
; SUBROUTINE TO SEE IF WE ARE IN DIRECT MODE.
; AND COMPLAIN IF SO.
;
ERRDIR: LDX	CURLIN+1	;DIR MODE HAS [CURLIN]=0,255
	INX			;SO NOW, IS RESULT ZERO?
	BNE	DIMRTS		;YES.
	LDXI	ERRID		;INPUT DIRECT ERROR CODE.
	SKIP2
ERRGUF: LDXI	ERRUF		;USER DEFINED FUNCTION NEVER DEFINED
ERRGO1: JMP	ERROR

DEF:	JSR	GETFNM		;GET A PNTR TO THE FUNCTION.
	JSR	ERRDIR
	JSR	CHKOPN		;MUST HAVE "(".
	LDAI	128
	STA	SUBFLG		;PROHIBIT SUBSCRIPTED VARIABLES.
	JSR	PTRGET		;GET PNTR TO ARGUMENT.
	JSR	CHKNUM		;IS IT A NUMBER?
	JSR	CHKCLS		;MUST HAVE ")"
	SYNCHK	EQULTK		;MUST HAVE "=".
IFN	ADDPRC,<PHA>		;PUT CRAZY BYTE ON.
	PSHWD	VARPNT
	PSHWD	TXTPTR
	JSR	DATA
	JMP	DEFFIN
;
; SUBROUTINE TO GET A PNTR TO A FUNCTION NAME.
;
GETFNM: SYNCHK	FNTK		;MUST START WITH FN.
	ORAI	128		;PUT FUNCTION BIT ON.
	STA	SUBFLG
	JSR	PTRGT2		;GET POINTER TO FUNCTION OR CREATE ANEW.
	STWD	DEFPNT
	JMP	CHKNUM		;MAKE SURE IT'S NOT A STRING AND RETURN.

FNDOER: JSR	GETFNM		;GET THE FUNCTION'S NAME.
	PSHWD	DEFPNT
	JSR	PARCHK		;EVALUATE PARAMETER.
	JSR	CHKNUM
	PULWD	DEFPNT
	LDYI	2
	LDADY	DEFPNT		;GET POINTER TO VARIABLE.
	STA	VARPNT		;SAVE VARIABLE POINTER.
	TAX
	INY
	LDADY	DEFPNT
	BEQ	ERRGUF
	STA	VARPNT+1
IFN	ADDPRC,<INY>		;SINCE DEF USES ONLY 4.
DEFSTF: LDADY	VARPNT
	PHA			;PUSH IT ALL ON STACK.
	DEY			;SINCE WE ARE RECURSING MAYBE.
	BPL	DEFSTF
	LDY	VARPNT+1
	JSR	MOVMF		;PUT CURRENT FAC INTO OUR ARG VARIABLE.
	PSHWD	TXTPTR		;SAVE TEXT POINTER.
	LDADY	DEFPNT		;PNTR TO FUNCTION.
	STA	TXTPTR
	INY
	LDADY	DEFPNT
	STA	TXTPTR+1
	PSHWD	VARPNT		;SAVE VARIABLE POINTER.
	JSR	FRMNUM		;EVALUATE FORMULA AND CHECK NUMERIC.
	PULWD	DEFPNT
	JSR	CHRGOT
	JNE	SNERR		;IT DIDN'T TERMINATE. HUH?
	PULWD	TXTPTR		;RESTORE TEXT PNTR.
DEFFIN: LDYI	0
	PLA			;GET OLD ARG VALUE OFF STACK
	STADY	DEFPNT		;AND PUT IT BACK IN VARIABLE.
	PLA
	INY
	STADY	DEFPNT
	PLA
	INY
	STADY	DEFPNT
	PLA
	INY
	STADY	DEFPNT
IFN	ADDPRC,<
	PLA
	INY	
	STADY	DEFPNT>
DEFRTS: RTS
	PAGE
