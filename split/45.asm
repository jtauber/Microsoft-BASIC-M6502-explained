SUBTTL	SYSTEM INITIALIZATION CODE.
RADIX	10		;IN ALL NON-MATH-PACKAGE CODE.
; THIS INITIALIZES THE BASIC INTERPRETER FOR THE M6502 AND SHOULD BE
; LOCATED WHERE IT WILL BE WIPED OUT IN RAM IF CODE IS ALL IN RAM.

IFE	ROMSW,<
	BLOCK	1>		;SO ZEROING AT TXTTAB DOESN'T PREVENT
				;RESTARTING INIT
INITAT: INC	CHRGET+7	;INCREMENT THE WHOLE TXTPTR.
	BNE	CHZGOT
	INC	CHRGET+8
CHZGOT: LDA	60000		;A LOAD WITH AN EXT ADDR.
	CMPI	":"		;IS IT A ":"?
	BCS	CHZRTS		;IT IS .GE. ":"
	CMPI	" "		;SKIP SPACES.
	BEQ	INITAT
	SEC
	SBCI	"0"		;ALL CHARS .GT. "9" HAVE RET'D SO
	SEC
	SBCI	^D256-"0"		;SEE IF NUMERIC.
				;TURN CARRY ON IF NUMERIC.
				;ALSO, SETZ IF NULL.
CHZRTS: RTS			;RETURN TO CALLER.

	128			;LOADED OR FROM ROM.
	79			;THE INITIAL RANDOM NUMBER.
	199
	82
IFN	ADDPRC,<88>
IFN REALIO-3,<
IFE	KIMROM,<
TYPAUT: LDWDI	AUTTXT
	JSR	STROUT>>
INIT:
IFN	REALIO-3,<
	LDXI	255		;MAKE IT LOOK DIRECT IN CASE OF
	STX	CURLIN+1>	;ERROR MESSAGE.
IFN	STKEND-511,<
	LDXI	STKEND-256>
	TXS
IFN	REALIO-3,<
	LDWDI	INIT		;ALLOW RESTART.
	STWD	START+1
	STWD	RDYJSR+1	;RTS HERE ON ERRORS.
	LDWDI	AYINT
	STWD	ADRAYI
	LDWDI	GIVAYF
	STWD	ADRGAY>
	LDAI	76		;JMP INSTRUCTION.
IFE	REALIO,<HRLI 1,^O1000>	;MAKE AN INST.
IFN	REALIO-3,<
	STA	START
	STA	RDYJSR>
	STA	JMPER
IFN	ROMSW,<
	STA	USRPOK
	LDWDI	FCERR
	STWD	USRPOK+1>
	LDAI	LINLEN		;THESE MUST BE NON-ZERO SO CHEAD WILL
	STA	LINWID		;WORK AFTER MOVING A NEW LINE IN BUF
				;INTO THE PROGRAM
	LDAI	NCMPOS
	STA	NCMWID
	LDXI	RNDX+4-CHRGET
MOVCHG: LDA	INITAT-1,X,
	STA	CHRGET-1,X,	;MOVE TO RAM.
	DEX
	BNE	MOVCHG
	LDAI	STRSIZ
	STA	FOUR6
	TXA			;SET CONST IN RAM.
	STA	BITS
IFN EXTIO,<
	STA	CHANNL>
	STA	LASTPT+1
IFN	NULCMD,<
	STA	NULCNT>
	PHA			;PUT ZERO AT THE END OF THE STACK
				;SO FNDFOR WILL STOP
IFN	REALIO,<
	STA	CNTWFL>		;BE TALKATIVE.
IFN	BUFPAG,<
	INX			;MAKE [X]=1
	STX	BUF-3		;SET PRE-BUF BYTES NON-ZERO FOR CHEAD
	STX	BUF-4>
IFN	REALIO-3,<
	JSR	CRDO>		;TYPE A CR.
	LDXI	TEMPST
	STX	TEMPPT		;SET UP STRING TEMPORARIES.
IFN	REALIO!LONGI,<
IFN	REALIO-3,<
	LDWDI	MEMORY
	JSR	STROUT
	JSR	QINLIN		;GET A LINE OF INPUT.
	STXY	TXTPTR		;READ THIS !
	JSR	CHRGET		;GET THE FIRST CHARACTER.
IFE	KIMROM,<
	CMPI	"A"		;IS IT AN "A"?
	BEQ	TYPAUT>		;YES TYPE AUTHOR'S NAME.
	TAY			;NULL INPUT?
	BNE	USEDE9>		;NO.
IFE	REALIO-3,<
	LDYI	RAMLOC/^D256>
IFN	REALIO-3,<
IFE	ROMSW,<
	LDWDI	LASTWR>		;YES GET PNTR TO LAST WORD.
IFN	ROMSW,<
	LDWDI	RAMLOC>>
IFN	ROMSW,<
	STWD	TXTTAB>		;SET UP START OF PROGRAM LOCATION
	STWD	LINNUM
IFE	REALIO-3,<
	TAY>
IFN	REALIO-3,<
	LDYI	0>
LOOPMM: INC	LINNUM
	BNE	LOOPM1
	INC	LINNUM+1
IFE	REALIO-3,<
	BMI	USEDEC>
LOOPM1: LDAI	85		;PUT RANDOM INFO INTO MEM.
	STADY	LINNUM
	CMPDY	LINNUM		;WAS IT SAVED?
	BNE	USEDEC		;NO. THAT IS END OF MEMORY.
	ASL	A,		;LOOKS LIKE IT. TRY ANOTHER.
	STADY	LINNUM
	CMPDY	LINNUM		;WAS IT SAVED?
IFN	REALIO-3,<
	BNE	USEDEC>		;NO. THIS IS THE END.
IFN	REALIO-2,<
	BEQ	LOOPMM>
IFE	REALIO-2,<
	BNE	USEDEC
	CMP	0		;SEE IF HITTING PAGE 0
	BNE	LOOPMM
	LDAI	76
	STA	0
	BNEA	USEDEC>
IFN	REALIO-3,<
USEDE9: JSR	CHRGOT		;GET CURRENT CHARACTER.
	JSR	LINGET		;GET DECIMAL ARGUMENT.
	TAY			;MAKE SURE A TERMINATOR EXISTS.
	BEQ	USEDEC		;IT DOES.
	JMP	SNERR>		;IT DOESN'T.
USEDEC: LDWD	LINNUM		;GET SIZE OF MEMORY INPUT.
USEDEF: >			;HIGHEST ADDRESS.
IFE	REALIO!LONGI,<
	LDWDI	16190>		;A STRANGE NUMBER.
	STWD	MEMSIZ		;THIS IS THE SIZE OF MEMORY.
	STWD	FRETOP		;TOP OF STRINGS TOO.
TTYW:
IFN	REALIO-3,<
IFN	REALIO!LONGI,<
	LDWDI	TTYWID
	JSR	STROUT
	JSR	QINLIN		;GET LINE OF INPUT.
	STXY	TXTPTR		;READ THIS !
	JSR	CHRGET		;GET FIRST CHARACTER.
	TAY			;TEST ACCA BUT DON'T AFFECT CARRY.
	BEQ	ASKAGN
	JSR	LINGET		;GET ARGUMENT.
	LDA	LINNUM+1
	BNE	TTYW		;WIDTH MUST BE .LT. 256.
	LDA	LINNUM
	CMPI	16		;WIDTH MUST BE GREATER THAN 16.
	BCC	TTYW
	STA	LINWID		;THAT IS THE LINE WIDTH.
MORCPS: SBCI	CLMWID		;COMPUTE POSITION BEYOND WHICH
	BCS	MORCPS		;THERE ARE NO MORE FIELDS.
	EORI	255
	SBCI	CLMWID-2
	CLC
	ADC	LINWID
	STA	NCMWID>
ASKAGN:
IFE	ROMSW,<
IFN	REALIO!LONGI,<
	LDWDI	FNS
	JSR	STROUT
	JSR	QINLIN
	STXY	TXTPTR		;READ THIS !
	JSR	CHRGET
	LDXYI	INITAT		;DEFAULT.
	CMPI	"Y"
	BEQ	HAVFNS		;SAVE ALL FUNCTIONS.
	CMPI	"A"
	BEQ	OKCHAR		;SAVE ALL BUT ATN.
	CMPI	"N"
	BNE	ASKAGN		;BAD INPUT.
				;SAVE NOTHING.
OKCHAR: LDXYI	FCERR
	STXY	ATNFIX		;GET RID OF ATN FUNCTION.
	LDXYI	ATN		;UNTIL WE KNOW THAT WE SHOULD DEL MORE.
	CMPI	"A"
	BEQ	HAVFNS		;JUST GET RID OF ATN.
	LDXYI	FCERR
	STXY	COSFIX		;GET RID OF THE REST.
	STXY	TANFIX
	STXY	SINFIX
	LDXYI	COS		;AND GET RID OF ALL BACK TO "COS".
HAVFNS:>
IFE	REALIO!LONGI,<
	LDXYI	INITAT-1>>>	;GET RID OF ALL UP TO "INITAT".
IFN	ROMSW,<
	LDXYI	RAMLOC
	STXY	TXTTAB>
	LDYI	0
	TYA
	STADY	TXTTAB		;SET UP TEXT TABLE.
	INC	TXTTAB
IFN	REALIO-3,<
	BNE	QROOM
	INC	TXTTAB+1>
QROOM:	LDWD	TXTTAB		;PREPARE TO USE "REASON".
	JSR	REASON
IFE	REALIO-3,<
	LDWDI	FREMES
	JSR	STROUT>
IFN	REALIO-3,<
	JSR	CRDO>
	LDA	MEMSIZ		;COMPUTE [MEMSIZ]-[VARTAB].
	SEC
	SBC	TXTTAB
	TAX
	LDA	MEMSIZ+1
	SBC	TXTTAB+1
	JSR	LINPRT		;TYPE THIS VALUE.
	LDWDI	WORDS		;MORE BULLSHIT.
	JSR	STROUT
	JSR	SCRTCH		;SET UP EVERYTHING ELSE.
IFE	REALIO-3,<
	JMP	READY>
IFN	REALIO-3,<
	LDWDI	STROUT
	STWD	RDYJSR+1
	LDWDI	READY
	STWD	START+1
	JMPD	START+1

IFE	ROMSW,<
FNS:	DT"WANT SIN-COS-TAN-ATN"
	0>
IFE	KIMROM,<
AUTTXT: ACRLF
	12			;ANOTHER LINE FEED.
	DT"WRITTEN "
	DT"BY WEILAND & GATES"
	ACRLF
	0>
MEMORY: DT"MEMORY SIZE"
	0
TTYWID:
IFE	KIMROM,<
	DT"TERMINAL ">
	DT"WIDTH"
	0>
WORDS:	DT" BYTES FREE"
IFN	REALIO-3,<
	ACRLF
	ACRLF>
IFE	REALIO-3,<
	EXP	^O15
	0
FREMES: >
IFE REALIO,<	DT"SIMULATED BASIC FOR THE 6502 V1.1">
IFE REALIO-1,<	DT"KIM BASIC V1.1">
IFE REALIO-2,<	DT"OSI 6502 BASIC VERSION 1.1">
IFE REALIO-3,<	DT"### COMMODORE BASIC ###"
	EXP	^O15
	EXP	^O15>
IFE	REALIO-4,<DT"APPLE BASIC V1.1">
IFE	REALIO-5,<DT"STM BASIC V1.1">
IFN	REALIO-3,<
	ACRLF
	DT"COPYRIGHT 1978 MICROSOFT"
	ACRLF>
	0
LASTWR::
	BLOCK	100		;SPACE FOR TEMP STACK.
IFE REALIO,<
TSTACK::BLOCK	13600>

IF2,<
	PURGE	A,X,Y>
