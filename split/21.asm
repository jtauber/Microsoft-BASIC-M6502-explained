SUBTTL	THE NEXT CODE IS THE "NEXT CODE"
;
; A "FOR" ENTRY ON THE STACK HAS THE FOLLOWING FORMAT:
;
; LOW ADDRESS
;	TOKEN (FORTK) 1 BYTE
;	A POINTER TO THE LOOP VARIABLE 2 BYTES
;	THE STEP 4+ADDPRC BYTES
;	A BYTE REFLECTING THE SIGN OF THE INCREMENT 1 BYTE
;	THE UPPER VALUE (PACKED) 4+ADDPRC BYTES
;	THE LINE NUMBER OF THE "FOR" STATEMENT 2 BYTES
;	A TEXT POINTER INTO THE "FOR" STATEMENT 2 BYTES
; HIGH ADDRESS
;
; TOTAL 16+2*ADDPRC BYTES.
;
NEXT:	BNE	GETFOR
	LDYI	0		;WITHOUT ARG CALL "FNDFOR" WITH
	BEQA	STXFOR		;[FORPNT]=0.
GETFOR: JSR	PTRGET		;GET A POINTER TO LOOP VARIABLE
STXFOR: STWD	FORPNT		;INTO "FORPNT".
	JSR	FNDFOR		;FIND THE MATCHING ENTRY IF ANY.
	BEQ	HAVFOR
	LDXI	ERRNF		;"NEXT WITHOUT FOR".
ERRGO5: BEQ	ERRGO4
HAVFOR: TXS			;SETUP STACK. CHOP FIRST.
	TXA
	CLC
	ADCI	4		;POINT TO INCREMENT
	PHA			;SAVE THIS POINTER TO RESTORE TO [A]
	ADCI	5+ADDPRC	;POINT TO UPPER LIMIT
	STA	INDEX2		;SAVE AS INDEX
	PLA			;RESTORE POINTER TO INCREMENT
	LDYI	1		;SET HI ADDR OF THING TO MOVE.
	JSR	MOVFM		;GET QUANTITY INTO THE FAC.
	TSX
	LDA	257+7+ADDPRC,X, ;SET SIGN CORRECTLY.
	STA	FACSGN
	LDWD	FORPNT
	JSR	FADD		;ADD INC TO LOOP VARIABLE.
	JSR	MOVVF		;PACK THE FAC INTO MEMORY.
	LDYI	1
	JSR	FCOMPN		;COMPARE FAC WITH UPPER VALUE.
	TSX
	SEC
	SBC	257+7+ADDPRC,X, ;SUBTRACT SIGN OF INC FROM SIGN OF
				;OF (CURRENT VALUE-FINAL VALUE).
	BEQ	LOOPDN		;IF SIGN (FINAL-CURRENT)-SIGN STEP=0
				;THEN LOOP IS DONE.
	LDA	2*ADDPRC+12+257,X
	STA	CURLIN		;STORE LINE NUMBER OF "FOR" STATEMENT.
	LDA	257+13+<2*ADDPRC>,X
	STA	CURLIN+1
	LDA	2*ADDPRC+15+257,X
	STA	TXTPTR		;STORE TEXT PNTR INTO "FOR" STATEMENT.
	LDA	2*ADDPRC+14+257,X
	STA	TXTPTR+1
NEWSGO: JMP	NEWSTT		;PROCESS NEXT STATEMENT.
LOOPDN: TXA
	ADCI	2*ADDPRC+15		;ADDS 16 WITH CARRY.
	TAX
	TXS			;NEW STACK PNTR.
	JSR	CHRGOT
	CMPI	44		;COMMA AT END?
	BNE	NEWSGO
	JSR	CHRGET
	JSR	GETFOR		;DO NEXT BUT DON'T ALLOW BLANK VARIABLE
				;PNTR. [VARPNT] IS THE STK PNTR WHICH
				;NEVER MATCHES ANY POINTER.
				;JSR TO PUT ON DUMMY NEWSTT ADDR.

