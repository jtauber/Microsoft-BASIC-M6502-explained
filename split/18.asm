SUBTTL	"LET" CODE.
LET:	JSR	PTRGET		;GET PNTR TO VARIABLE INTO "VARPNT".
	STWD	FORPNT		;PRESERVE POINTER.
	SYNCHK	EQULTK		;"=" IS NECESSARY.
IFN	INTPRC,<
	LDA	INTFLG		;SAVE FOR LATER.
	PHA>
	LDA	VALTYP		;RETAIN THE VARIABLE'S VALUE TYPE.
	PHA
	JSR	FRMEVL		;GET VALUE OF FORMULA INTO "FAC".
	PLA
	ROL	A,		;CARRY SET FOR STRING, OFF FOR
				;NUMERIC.
	JSR	CHKVAL		;MAKE SURE "VALTYP" MATCHES CARRY.
				;AND SET ZERO FLAG FOR NUMERIC.
	BNE	COPSTR		;IF NUMERIC, COPY IT.
COPNUM:
IFN	INTPRC,<
	PLA			;GET NUMBER TYPE.
QINTGR: BPL	COPFLT		;STORE A FLTING NUMBER.
	JSR	ROUND		;ROUND INTEGER.
	JSR	AYINT		;MAKE 2-BYTE NUMBER.
	LDYI	0
	LDA	FACMO		;GET HIGH.
	STADY	FORPNT		;STORE IT.
	INY
	LDA	FACLO		;GET LOW.
	STADY	FORPNT
	RTS>
COPFLT: JMP	MOVVF		;PUT NUMBER @FORPNT.

COPSTR:
IFN	INTPRC,<PLA>		;IF STRING, NO INTFLG.
INPCOM:
IFN	TIME,<
	LDY	FORPNT+1	;TI$?
	CPYI	ZERO/256	;ONLY TI$ CAN BE THIS ON ASSIG.
	BNE	GETSPT		; WAS NOT TI$.
	JSR	FREFAC		;WE WONT NEEDIT.
	CMPI	6		;LENGTH CORRECT?
	BNE	FCERR2
	LDYI	0		;YES. DO SETUP.
	STY	FACEXP		;ZERO FAC TO START WITH.
	STY	FACSGN
TIMELP: STY	FBUFPT		;SAVE POSOTION.
	JSR	TIMNUM		;GET A DIGIT.
	JSR	MUL10		;WHOLE QTY BY 10.
	INC	FBUFPT
	LDY	FBUFPT
	JSR	TIMNUM
	JSR	MOVAF
	TAX			;IF NUM=0 THEN NO MULT.
	BEQ	NOML6		;IF =0, GO TIT.
	INX			;MULT BY TWO.
	TXA
	JSR	FINML6		;ADD IN AND MULT BY 2 GIVES *6.
NOML6:	LDY	FBUFPT
	INY
	CPYI	6		;DONE ALL SIX?
	BNE	TIMELP
	JSR	MUL10		;ONE LAST TIME.
	JSR	QINT		;SHIFT IT OVER TO THE RIGHT.
	LDXI	2
	SEI			;DISALLOW INTERRUPTS.
TIMEST: LDA	FACMOH,X
	STA	CQTIMR,X
	DEX
	BPL	TIMEST		;LOOP 3 TIMES.
	CLI			;TURN ON INTS AGAIN.
	RTS
TIMNUM: LDADY	INDEX		;INDEX SET UP BY FREFAC.
	JSR	QNUM
	BCC	GOTNUM
FCERR2: JMP	FCERR		;MUST BE NUMERIC STRING.
GOTNUM: SBCI	"0"-1		;C IS OFF.
	JMP	FINLOG>		;ADD IN DIGIT TO FAC.

GETSPT: LDYI	2		;GET PNTR TO DESCRIPTOR.
	LDADY	FACMO
	CMP	FRETOP+1	;SEE IF IT POINTS INTO STRING SPACE.
	BCC	DNTCPY		;IF [FRETOP],GT.[2&3,FACMO], DON'T COPY.
	BNE	QVARIA		;IT IS LESS.
	DEY
	LDADY	FACMO
	CMP	FRETOP		;COMPARE LOW ORDERS.
	BCC	DNTCPY
QVARIA: LDY	FACLO
	CPY	VARTAB+1	;IF [VARTAB].GT.[FACMO], DON'T COPY.
	BCC	DNTCPY
	BNE	COPY		;IT IS LESS.
	LDA	FACMO
	CMP	VARTAB		;COMPARE LOW ORDERS.
	BCS	COPY
DNTCPY: LDWD	FACMO
	JMP	COPYZC
COPY:	LDYI	0
	LDADY	FACMO
	JSR	STRINI		;GET ROOM TO COPY STRING INTO.
	LDWD	DSCPNT		;GET POINTER TO OLD DESCRIPTOR, SO 
	STWD	STRNG1		;MOVINS CAN FIND STRING.
	JSR	MOVINS		;COPY IT.
	LDWDI	DSCTMP		;GET POINTER TO OLD DESCRIPTOR.
COPYZC: STWD	DSCPNT		;REMEMBER POINTER TO DESCRIPTOR.
	JSR	FRETMS		;FREE UP THE TEMPORARY WITHOUT
				;FREEING UP ANY STRING SPACE.
	LDYI	0
	LDADY	DSCPNT
	STADY	FORPNT
	INY			;POINT TO STRING PNTR.
	LDADY	DSCPNT
	STADY	FORPNT
	INY
	LDADY	DSCPNT
	STADY	FORPNT
	RTS
PAGE
