SUBTTL	POLYNOMIAL EVALUATOR AND THE RANDOM NUMBER GENERATOR.
	;EVALUATE P(X^2)*X
	;POINTER TO DEGREE IS IN [Y,A].
	;THE CONSTANTS FOLLOW THE DEGREE.
	;FOR X=FAC, COMPUTE:
	; C0*X+C1*X^3+C2*X^5+C3*X^7+...+C(N)*X^(2*N+1)
POLYX:	STWD	POLYPT		;RETAIN POLYNOMIAL POINTER FOR LATER.
	JSR	MOV1F		;SAVE FAC IN FACTMP.
	LDAI	TEMPF1
	JSR	FMULT		;COMPUTE X^2.
	JSR	POLY1		;COMPUTE P(X^2).
	LDWDI	TEMPF1
	JMP	FMULT		;MULTIPLY BY FAC AGAIN.

	;POLYNOMIAL EVALUATOR.
	;POINTER TO DEGREE IS IN [Y,A].
	;COMPUTE:
	; C0+C1*X+C2*X^2+C3*X^3+C4*X^4+...+C(N-1)*X^(N-1)+C(N)*X^N.
POLY:	STWD	POLYPT
POLY1:	JSR	MOV2F		;SAVE FAC.
	LDADY	POLYPT
	STA	DEGREE
	LDY	POLYPT
	INY
	TYA
	BNE	POLY3
	INC	POLYPT+1
POLY3:	STA	POLYPT
	LDY	POLYPT+1
POLY2:	JSR	FMULT
	LDWD	POLYPT		;GET CURRENT POINTER.
	CLC
	ADCI	4+ADDPRC
	BCC	POLY4
	INY
POLY4:	STWD	POLYPT
	JSR	FADD		;ADD IN CONSTANT.
	LDWDI	TEMPF2		;MULTIPLY THE ORIGINAL FAC.
	DEC	DEGREE		;DONE?
	BNE	POLY2
RANDRT: RTS			;YES.

	;PSUEDO-RANDOM NUMBER GENERATOR.
	;IF ARG=0, THE LAST RANDOM NUMBER GENERATED IS RETURNED.
	;IF ARG .LT. 0, A NEW SEQUENCE OF RANDOM NUMBERS IS
	;STARTED USING THE ARGUMENT.
	;   TO FORM THE NEXT RANDOM NUMBER IN THE SEQUENCE,
	;MULTIPLY THE PREVIOUS RANDOM NUMBER BY A RANDOM CONSTANT
	;AND ADD IN ANOTHER RANDOM CONSTANT. THE THEN HO
	;AND LO BYTES ARE SWITCHED, THE EXPONENT IS PUT WHERE
	;IT WILL BE SHIFTED IN BY NORMAL, AND THE EXPONENT IN THE FAC
	;IS SET TO 200 SO THE RESULT WILL BE LESS THAN 1. THIS
	;IS THEN NORMALIZED AND SAVED FOR THE NEXT TIME.
	;THE HO AND LOW BYTES WERE SWITCHED SO THERE WILL BE A
	;RANDOM CHANCE OF GETTING A NUMBER LESS THAN OR GREATER
	;THAN .5 .

RMULZC: 230
	065
	104
	172
RADDZC: 150
	050
	261
	106

RND:	JSR	SIGN		;GET SIGN INTO ACCX.
IFN	REALIO-3,<
	TAX>			;GET INTO ACCX, SINCE "MOVFM" USES ACCX.
	BMI	RND1		;START NEW SEQUENCE IF NEGATIVE.
IFE	REALIO-3,<
	BNE	QSETNR
		;TIMERS ARE AT 9044(L0),45(HI),48(LO),49(HI) HEX.
		;FIRST TWO ARE ALWAYS FREE RUNNING.
		;SECOND PAIR IS NOT. LO IS FREER THAN HI THEN.
		;SO ORDER IN FAC IS 44,48,45,49.
	LDA	CQHTIM
	STA	FACHO
	LDA	CQHTIM+4
	STA	FACMOH
	LDA	CQHTIM+1
	STA	FACMO
	LDA	CQHTIM+5
	STA	FACLO
	JMP	STRNEX>
QSETNR: LDWDI	RNDX		;GET LAST ONE INTO FAC.
	JSR	MOVFM
IFN	REALIO-3,<
	TXA			;FAC WAS ZERO?
	BEQ	RANDRT>		;RESTORE LAST ONE.
	LDWDI	RMULZC		;MULTIPLY BY RANDOM CONSTANT.
	JSR	FMULT
	LDWDI	RADDZC
	JSR	FADD		;ADD RANDOM CONSTANT.
RND1:	LDX	FACLO
	LDA	FACHO
	STA	FACLO
	STX	FACHO		;REVERSE HO AND LO.
IFE	REALIO-3,<
	LDX	FACMOH
	LDA	FACMO
	STA	FACMOH
	STX	FACMO>
STRNEX: CLR	FACSGN		;MAKE NUMBER POSITIVE.
	LDA	FACEXP		;PUT EXP WHERE IT WILL
	STA	FACOV		;BE SHIFTED IN BY NORMAL.
	LDAI	200
	STA	FACEXP		;MAKE RESULT BETWEEN 0 AND 1.
	JSR	NORMAL		;NORMALIZE.
	LDXYI	RNDX
GMOVMF: JMP	MOVMF		;PUT NEW ONE INTO MEMORY.

PAGE
