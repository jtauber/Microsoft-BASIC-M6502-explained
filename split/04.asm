SUBTTL	PAGE ZERO.
IFN	REALIO-3,<
START:	JMP	INIT		;INITIALIZE - SETUP CERTAIN LOCATIONS
				;AND DELETE FUNCTIONS IF NOT NEEDED,
				;AND CHANGE THIS TO "JMP READY"
				;IN CASE USER RESTARTS AT LOC ZERO.
RDYJSR: JMP	INIT		;CHANGED TO "JMP STROUT" BY "INIT"
				;TO HANDLE ERRORS.
ADRAYI: ADR(AYINT)		;STORE HERE THE ADDR OF THE
				;ROUTINE TO TURN THE FAC INTO A 
				;TWO BYTE SIGNED INTEGER IN [Y,A]
ADRGAY: ADR(GIVAYF)>		;STORE HERE THE ADDR OF THE
				;ROUTINE TO CONVERT [Y,A] TO A FLOATING
				;POINT NUMBER IN THE FAC.
IFN	ROMSW,<
USRPOK: JMP	FCERR>		;SET UP ORIG BY INIT.
;
; THIS IS THE "VOLATILE" STORAGE AREA AND NONE OF IT
; CAN BE KEPT IN ROM. ANY CONSTANTS IN THIS AREA CANNOT
; BE KEPT IN A ROM, BUT MUST BE LOADED IN BY THE 
; PROGRAM INSTRUCTIONS IN ROM.
;
; --- GENERAL RAM ---:
CHARAC: BLOCK	1		;A DELIMITING CHARACTER.
INTEGR= CHARAC			;A ONE-BYTE INTEGER FROM "QINT".
ENDCHR: BLOCK	1		;THE OTHER DELIMITING CHARACTER.
COUNT:	BLOCK	1		;A GENERAL COUNTER.

; --- FLAGS ---:
DIMFLG: BLOCK	1		;IN GETTING A POINTER TO A VARIABLE
				;IT IS IMPORTANT TO REMEMBER WHETHER IT
				;IS BEING DONE FOR "DIM" OR NOT.
				;DIMFLG AND VALTYP MUST BE
				;CONSECUTIVE LOCATIONS.
KIMY=	DIMFLG			;PLACE TO PRESERVE Y DURING OUT.
VALTYP: BLOCK	1		;THE TYPE INDICATOR.
				;0=NUMERIC 1=STRING.
IFN	INTPRC,<
INTFLG: BLOCK	1>		;TELLS IF INTEGER.
DORES:	BLOCK	1		;WHETHER CAN OR CAN'T CRUNCH RES'D WORDS.
				;TURNED ON WHEN "DATA"
				;BEING SCANNED BY CRUNCH SO UNQUOTED
				;STRINGS WON'T BE CRUNCHED.
GARBFL= DORES			;WHETHER TO DO GARBAGE COLLECTION.
SUBFLG: BLOCK	1		;FLAG WHETHER SUB'D VARIABLE ALLOWED.
				;"FOR" AND USER-DEFINED FUNCTION
				;POINTER FETCHING TURN
				;THIS ON BEFORE CALLING "PTRGET"
				;SO ARRAYS WON'T BE DETECTED.
				;"STKINI" AND "PTRGET" CLEAR IT.
				;ALSO DISALLOWS INTEGERS THERE.
INPFLG: BLOCK	1		;FLAGS WHETHER WE ARE DOING "INPUT"
				;OR "READ".
TANSGN: BLOCK	1		;USED IN DETERMINING SIGN OF TANGENT.
IFN	REALIO,<
CNTWFL: BLOCK	1>		;SUPPRESS OUTPUT FLAG.
				;NON-ZERO MEANS SUPPRESS.
				;RESET BY "INPUT", READY AND ERRORS.
				;COMPLEMENTED BY INPUT OF ^O.

IFE	REALIO-4,<ORG	80>	;ROOM FOR APPLE PAGE 0 STUFF.
; --- RAM DEALING WITH TERMINAL HANDLING ---:
IFN	EXTIO,<
CHANNL: BLOCK	1>		;HOLDS CHANNEL NUMBER.
IFN	NULCMD,<
NULCNT: 0>			;NUMBER OF NULLS TO PRINT.
IFN	REALIO-3,<
TRMPOS: BLOCK	1>		;POSITION OF TERMINAL CARRIAGE.
LINWID: LINLEN			;LENGTH OF LINE (WIDTH).
NCMWID: NCMPOS			;POSITION BEYOND WHICH THERE ARE
				;NO MORE FIELDS.
LINNUM: 0			;LOCATION TO STORE LINE NUMBER BEFORE BUF
				;SO THAT "BLTUC" CAN STORE IT ALL AWAY AT ONCE.
	44			;A COMMA (PRELOAD OR FROM ROM)
				;USED BY INPUT STATEMENT SINCE THE
				;DATA POINTER ALWAYS STARTS ON A
				;COMMA OR TERMINATOR.
IFE	BUFPAG,<
BUF:	BLOCK	BUFLEN>		;TYPE IN STORED HERE.
				;DIRECT STATEMENTS EXECUTE OUT OF
				;HERE. REMEMBER "INPUT" SMASHES BUF.
				;MUST BE ON PAGE ZERO
				;OR ASSIGNMENT OF STRING
				;VALUES IN DIRECT STATEMENTS WON'T COPY
				;INTO STRING SPACE -- WHICH IT MUST.
				;N.B. TWO NONZERO BYTES MUST PRECEDE "BUFLNM".

; --- STORAGE FOR TEMPORARY THINGS ---:
TEMPPT: BLOCK	1		;POINTER AT FIRST FREE TEMP DESCRIPTOR.
				;INITIALIZED TO POINT TO TEMPST.
LASTPT: BLOCK	2		;POINTER TO LAST-USED STRING TEMPORARY.
TEMPST: BLOCK	STRSIZ*NUMTMP	;STORAGE FOR NUMTMP TEMP DESCRIPTORS.
INDEX1: BLOCK	2		;INDEXES.
INDEX=	INDEX1
INDEX2: BLOCK	2
RESHO:	BLOCK	1		;RESULT OF MULTIPLIER AND DIVIDER.
IFN	ADDPRC,<
RESMOH: BLOCK	1>		;ONE MORE BYTE.
RESMO:	BLOCK	1
RESLO:	BLOCK	1
ADDEND= RESMO			;TEMPORARY USED BY "UMULT".
	0			;OVERFLOW FOR RES.

; --- POINTERS INTO DYNAMIC DATA STRUCTURES ---;
TXTTAB: BLOCK	2		;POINTER TO BEGINNING OF TEXT.
				;DOESN'T CHANGE AFTER BEING
				;SETUP BY "INIT".
VARTAB: BLOCK	2		;POINTER TO START OF SIMPLE
				;VARIABLE SPACE.
				;UPDATED WHENEVER THE SIZE OF THE
				;PROGRAM CHANGES, SET TO [TXTTAB]
				;BY "SCRATCH" ("NEW").
ARYTAB: BLOCK	2		;POINTER TO BEGINNING OF ARRAY
				;TABLE.
				;INCREMENTED BY 6 WHENEVER
				;A NEW SIMPLE VARIABLE IS FOUND, AND
				;SET TO [VARTAB] BY "CLEARC".
STREND: BLOCK	2		;END OF STORAGE IN USE.
				;INCREASED WHENEVER A NEW ARRAY
				;OR SIMPLE VARIABLE IS ENCOUNTERED.
				;SET TO [VARTAB] BY "CLEARC".
FRETOP: BLOCK	2		;TOP OF STRING FREE SPACE.
FRESPC: BLOCK	2		;POINTER TO NEW STRING.
MEMSIZ: BLOCK	2		;HIGHEST LOCATION IN MEMORY.

; --- LINE NUMBERS AND TEXTUAL POINTERS ---:
CURLIN: BLOCK	2		;CURRENT LINE #.
				;SET TO 0,255 FOR DIRECT STATEMENTS.
OLDLIN: BLOCK	2		;OLD LINE NUMBER (SETUP BY ^C,"STOP"
				;OR "END" IN A PROGRAM).
POKER=	LINNUM			;SET UP LOCATION USED BY POKE.
				;TEMPORARY FOR INPUT AND READ CODE
OLDTXT: BLOCK	2		;OLD TEXT POINTER.
				;POINTS AT STATEMENT TO BE EXEC'D NEXT.
DATLIN: BLOCK	2		;DATA LINE # -- REMEMBER FOR ERRORS.
DATPTR: BLOCK	2		;POINTER TO DATA. INITIALIZED TO POINT
				;AT THE ZERO IN FRONT OF [TXTTAB]
				;BY "RESTORE" WHICH IS CALLED BY "CLEARC".
				;UPDATED BY EXECUTION OF A "READ".
INPPTR: BLOCK	2		;THIS REMEMBERS WHERE INPUT IS COMING FROM.

; --- STUFF USED IN EVALUATIONS ---:
VARNAM: BLOCK	2		;VARIABLE'S NAME IS STORED HERE.
VARPNT: BLOCK	2		;POINTER TO VARIABLE IN MEMORY.
FDECPT= VARPNT			;POINTER INTO POWER OF TENS OF "FOUT".
FORPNT: BLOCK	2		;A VARIABLE'S POINTER FOR "FOR" LOOPS
				;AND "LET" STATEMENTS.
LSTPNT= FORPNT			;PNTR TO LIST STRING.
ANDMSK= FORPNT			;THE MASK USED BY WAIT FOR ANDING.
EORMSK= FORPNT+1		;THE MASK FOR EORING IN WAIT.
OPPTR:	BLOCK	2		;POINTER TO CURRENT OP'S ENTRY IN "OPTAB".
VARTXT= OPPTR			;POINTER INTO LIST OF VARIABLES.
OPMASK: BLOCK	1		;MASK CREATED BY CURRENT OPERATOR.
DOMASK=TANSGN			;MASK IN USE BY RELATION OPERATIONS.
DEFPNT: BLOCK	2		;POINTER USED IN FUNCTION DEFINITION.
GRBPNT= DEFPNT			;ANOTHER USED IN GARBAGE COLLECTION.
DSCPNT: BLOCK	2		;POINTER TO A STRING DESCRIPTOR.
IFN	ADDPRC,<BLOCK	1>	;FOR TEMPF3.
FOUR6:	EXP	STRSIZ		;VARIABLE CONSTANT USED BY GARB COLLECT.

; --- ET CETERA ---:
JMPER:	JMP	60000
SIZE=	JMPER+1
OLDOV=	JMPER+2			;THE OLD OVERFLOW.
TEMPF3= DEFPNT			;A THIRD FAC TEMPORARY (4 BYTES).
TEMPF1:
IFN	ADDPRC,<0>		;FOR TEMPF1S EXTRA BYTE.
HIGHDS: BLOCK	2		;DESINATION OF HIGHEST ELEMENT IN BLT.
HIGHTR: BLOCK	2		;SOURCE OF HIGHEST ELEMENT TO MOVE.
TEMPF2:
IFN	ADDPRC,<0>		;FOR TEMPF2S EXTRA BYTE.
LOWDS:	BLOCK	2		;LOCATION OF LAST BYTE TRANSFERRED INTO.
LOWTR:	BLOCK	2		;LAST THING TO MOVE IN BLT.
ARYPNT= HIGHDS			;A POINTER USED IN ARRAY BUILDING.
GRBTOP= LOWTR			;A POINTER USED IN GARBAGE COLLECTION.
DECCNT= LOWDS			;NUMBER OF PLACES BEFORE DECIMAL POINT.
TENEXP= LOWDS+1			;HAS A DPT BEEN INPUT?
DPTFLG= LOWTR			;BASE TEN EXPONENT.
EXPSGN= LOWTR+1			;SIGN OF BASE TEN EXPONENT.

; --- THE FLOATING ACCUMULATOR ---:
FAC:
FACEXP: 0
FACHO:	0			;MOST SIGNIFICANT BYTE OF MANTISSA.
IFN	ADDPRC,<
FACMOH: 0>			;ONE MORE.
FACMO:	0			;MIDDLE ORDER OF MANTISSA.
FACLO:	0			;LEAST SIG BYTE OF MANTISSA.
FACSGN: 0			;SIGN OF FAC (0 OR -1) WHEN UNPACKED.
SGNFLG: 0			;SIGN OF FAC IS PRESERVED BERE BY "FIN".
DEGREE= SGNFLG			;A COUNT USED BY POLYNOMIALS.
DSCTMP= FAC			;THIS IS WHERE TEMP DESCS ARE BUILT.
INDICE= FACMO			;INDICE IS SET UP HERE BY "QINT".
BITS:	0			;SOMETHING FOR "SHIFTR" TO USE.

; --- THE FLOATING ARGUMENT (UNPACKED) ---:
ARGEXP: 0
ARGHO:	0
IFN	ADDPRC,<ARGMOH: 0>
ARGMO:	0
ARGLO:	0
ARGSGN: 0

ARISGN: 0			;A SIGN REFLECTING THE RESULT.
FACOV:	0			;OVERFLOW BYTE OF THE FAC.
STRNG1= ARISGN			;POINTER TO A STRING OR DESCRIPTOR.

FBUFPT: BLOCK	2		;POINTER INTO FBUFFR USED BY FOUT.
BUFPTR= FBUFPT			;POINTER TO BUF USED BY "CRUNCH".
STRNG2= FBUFPT			;POINTER TO STRING OR DESC.
POLYPT= FBUFPT			;POINTER INTO POLYNOMIAL COEFFICIENTS.
CURTOL= FBUFPT			;ABSOLUTE LINEAR INDEX IS FORMED HERE.
PAGE
